<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:security="http://www.springframework.org/schema/security"
  xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:annotation-config />
    <aop:config proxy-target-class="true" />
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" proxy-target-class="true"/>
    
    <bean id="springSecurityPortletFilterChain" class="org.jasig.springframework.security.portlet.PortletFilterChainProxy">
        <constructor-arg>
            <bean class="org.jasig.springframework.security.portlet.DefaultPortletSecurityFilterChain">
                <constructor-arg>
                    <!-- Configurable - allow apply security to only specific requests -->
                    <bean class="org.jasig.springframework.security.portlet.util.AnyRequestMatcher" />
                </constructor-arg>
                <constructor-arg>
                    <list>
                        <!-- TODO filter to catch id & attr swapper behavior -->
                        <bean class="org.jasig.springframework.security.portlet.context.PortletSecurityContextPersistenceFilter" />
                        <bean class="org.jasig.springframework.security.portlet.authentication.PortletAuthenticationProcessingFilter">
                            <property name="authenticationDetailsSource">
                                <!-- Configurable - will be rare to change though as it implies something other than getRemoteUser is used to determine auth -->
                                <bean class="edu.wisc.web.security.portlet.primaryattr.PrimaryAttributePortletPreAuthenticatedAuthenticationDetailsSource">
                                    <property name="primaryUserAttributesPreference" value="emplidUserAttributes" />
                                    <property name="mappableRolesRetriever">
                                        <!-- Configurable - gets list of roles to check request.isUserInRole for. Default is to parse from portlet.xml -->
                                        <bean class="org.jasig.springframework.security.portlet.authentication.PortletXmlMappableAttributesRetriever" />
                                    </property>
                                </bean>
                            </property>
                            <property name="authenticationManager">
                                <bean class="org.springframework.security.authentication.ProviderManager">
                                    <constructor-arg>
                                        <!-- Configurable - is this replaceable or can users just add additional providers? -->
                                        <bean class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
                                            <property name="preAuthenticatedUserDetailsService">
                                                <!-- Configurable - replace with custom impl or extension to add GrantedAuthorities -->
                                                <!-- Implementation that gets additional roles from Peoplesoft web service -->
                                                <bean class="edu.wisc.portlet.hrs.security.HrsPreAuthenticatedGrantedAuthoritiesUserDetailsService" />
                                                <!-- Implementation that does not provide any roles. Use ONLY if not using portlets requiring HR roles -->
                                                <!--<bean class="org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService"/>-->
                                            </property>
                                        </bean>
                                    </constructor-arg>
                                </bean>
                            </property>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
</beans>